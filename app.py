# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ua5AAVUd1Bl4CKbNGa7y82NNPkWyTeyt
"""

import streamlit as st
import pandas as pd
import pickle

# Load model bundle
with open('new_best_model.pkl', 'rb') as f:
    saved = pickle.load(f)

model = saved['model']
scaler = saved['scaler']
label_encoders = saved['label_encoders']

# Title
st.title("Hotel Booking Cancellation Predictor")

# Sidebar for test cases
test_case = st.sidebar.selectbox("Pilih Test Case", ["Manual Input", "Test Case 1", "Test Case 2"])

# Test case values
test_inputs = {
    "Test Case 1": {
        'no_of_adults': 2,
        'no_of_children': 0,
        'no_of_weekend_nights': 1,
        'no_of_week_nights': 2,
        'type_of_meal_plan': 'Meal Plan 1',
        'required_car_parking_space': 0,
        'room_type_reserved': 'Room_Type 1',
        'lead_time': 30,
        'arrival_year': 2018,
        'arrival_month': 12,
        'arrival_date': 15,
        'market_segment_type': 'Online',
        'repeated_guest': 0,
        'no_of_previous_cancellations': 0,
        'no_of_previous_bookings_not_canceled': 0,
        'avg_price_per_room': 100.0,
        'no_of_special_requests': 1
    },
    "Test Case 2": {
        'no_of_adults': 1,
        'no_of_children': 1,
        'no_of_weekend_nights': 0,
        'no_of_week_nights': 1,
        'type_of_meal_plan': 'Meal Plan 2',
        'required_car_parking_space': 1,
        'room_type_reserved': 'Room_Type 2',
        'lead_time': 120,
        'arrival_year': 2018,
        'arrival_month': 5,
        'arrival_date': 10,
        'market_segment_type': 'Offline',
        'repeated_guest': 1,
        'no_of_previous_cancellations': 1,
        'no_of_previous_bookings_not_canceled': 2,
        'avg_price_per_room': 80.0,
        'no_of_special_requests': 0
    }
}

if test_case == "Manual Input":
    input_data = {
        'no_of_adults': st.number_input('Adults', 1, 10, 2),
        'no_of_children': st.number_input('Children', 0, 10, 0),
        'no_of_weekend_nights': st.number_input('Weekend Nights', 0, 10, 1),
        'no_of_week_nights': st.number_input('Week Nights', 0, 10, 2),
        'type_of_meal_plan': st.selectbox('Meal Plan', ['Meal Plan 1', 'Meal Plan 2', 'Meal Plan 3', 'Not Selected']),
        'required_car_parking_space': st.selectbox('Parking Space', [0, 1]),
        'room_type_reserved': st.selectbox('Room Type', ['Room_Type 1', 'Room_Type 2', 'Room_Type 3', 'Room_Type 4', 'Room_Type 5', 'Room_Type 6', 'Room_Type 7']),
        'lead_time': st.number_input('Lead Time (days)', 0, 500, 30),
        'arrival_year': st.selectbox('Arrival Year', [2017, 2018]),
        'arrival_month': st.slider('Arrival Month', 1, 12, 6),
        'arrival_date': st.slider('Arrival Date', 1, 31, 15),
        'market_segment_type': st.selectbox('Market Segment', ['Online', 'Offline', 'Corporate', 'Aviation', 'Complementary']),
        'repeated_guest': st.selectbox('Repeated Guest?', [0, 1]),
        'no_of_previous_cancellations': st.number_input('Previous Cancellations', 0, 10, 0),
        'no_of_previous_bookings_not_canceled': st.number_input('Previous Bookings (Not Cancelled)', 0, 10, 0),
        'avg_price_per_room': st.number_input('Average Price Per Room', 0.0, 1000.0, 100.0),
        'no_of_special_requests': st.number_input('Special Requests', 0, 5, 1)
    }
else:
    input_data = test_inputs[test_case]
    st.write(f"### Auto-filled input for {test_case}")
    st.json(input_data)

# Prepare DataFrame for prediction
df = pd.DataFrame([input_data])

# Encode categorical columns
for col, le in label_encoders.items():
    if col in df.columns:
        df[col] = le.transform(df[col])

# Scale numeric data
df_scaled = scaler.transform(df)

# Predict
if st.button("Predict Booking Status"):
    prediction = model.predict(df_scaled)[0]
    status = "❌ Booking Canceled" if prediction == 1 else "✅ Booking Confirmed"
    st.subheader(f"Prediction: {status}")